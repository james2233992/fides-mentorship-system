# Railway configuration for NestJS backend
[build]
builder = "dockerfile"
dockerfilePath = "./Dockerfile.production"

[deploy]
startCommand = "npm run start:prod"
healthcheckPath = "/api/health"
healthcheckTimeout = 30
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 3
region = "us-east"

[env]
PORT = { variable = "PORT" }
NODE_ENV = "production"

# Database
DATABASE_URL = { variable = "DATABASE_URL" }

# Redis
REDIS_URL = { variable = "REDIS_URL" }

# Security
JWT_SECRET = { variable = "JWT_SECRET" }
JWT_EXPIRATION = "7d"
BCRYPT_ROUNDS = "10"

# CORS
CORS_ORIGIN = { variable = "FRONTEND_URL" }

# Services
SENDGRID_API_KEY = { variable = "SENDGRID_API_KEY" }
TWILIO_ACCOUNT_SID = { variable = "TWILIO_ACCOUNT_SID" }
TWILIO_AUTH_TOKEN = { variable = "TWILIO_AUTH_TOKEN" }
TWILIO_PHONE_NUMBER = { variable = "TWILIO_PHONE_NUMBER" }

# Monitoring
SENTRY_DSN = { variable = "SENTRY_DSN" }
LOG_LEVEL = "info"

[[services]]
name = "postgres"
image = "postgres:15-alpine"
volumes = ["/var/lib/postgresql/data"]

[services.env]
POSTGRES_DB = "fides_production"
POSTGRES_USER = { variable = "POSTGRES_USER" }
POSTGRES_PASSWORD = { variable = "POSTGRES_PASSWORD" }

[[services]]
name = "redis"
image = "redis:7-alpine"
volumes = ["/data"]
command = "redis-server --appendonly yes"